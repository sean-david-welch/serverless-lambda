org: seanwelch
app: lambda-test
service: amos-lambda

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.10
  region: eu-west-1
  environment:
    PGHOST: ${.env:PGHOST}
    PGDATABASE: ${.env:PGDATABASE}
    PGUSER: ${.env:PGUSER}
    PGPASSWORD: ${.env:PGPASSWORD}
    PGPORT: ${.env:PGPORT}

package:
  exclude:
    - .env
    - .venv/**
    - __pycache__
    - node_modules/**

custom:
  pythonRequirements:
    dockerizePip: true
    slim: false

functions:
  get_products:
    handler: handler.get_products
    events:
      - http:
          path: /products
          method: get
          authorizer: null
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - Authorization
              - X-Api-Key
            allowCredentials: true

  post_product:
    handler: handler.post_product
    events:
      - http:
          path: /product
          method: post
          authorizer: null
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - Authorization
              - X-Api-Key
            allowCredentials: true

  put_product:
    handler: handler.put_product
    events:
      - http:
          path: /product/{id}
          method: put
          authorizer: null
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - Authorization
              - X-Api-Key
            allowCredentials: true

  delete_product:
    handler: handler.delete_product
    events:
      - http:
          path: /product/{id}
          method: delete
          authorizer: null
          cors:
            origins:
              - '*'
            headers:
              - Content-Type
              - Authorization
              - X-Api-Key
            allowCredentials: true

plugins:
  - serverless-offline
  - serverless-dotenv-plugin
  - serverless-python-requirements
